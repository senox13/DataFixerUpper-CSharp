namespace DataFixerUpper.DataFixers.Kinds{
    public interface Kind1<F, Mu> : App<Mu, F> where F : K1 where Mu : Kind1.Mu{}

    public static class Kind1{
        public interface Mu : K1{}


        /*
         * Static methods
         */
        public static Kind1<F, Proof> Unbox<F, Proof>(App<Proof, F> proofBox) where F : K1 where Proof : Mu{
            return (Kind1<F, Proof>)proofBox;
        }


        /*
         * The below extension methods were generated by the following code.
         * This should be converted to a source generator at some point.
        static string TAB = "    ";

        static IEnumerable<F> MapRange<F>(int start, int end, Func<int, F> mapper){
            return Enumerable.Range(start, end - start + 1).Select(mapper);
        }

        static string MakeArgList(int start, int end){
            return string.Join(", ", MapRange(start, end, i => $"T{i}"));
        }

        static void AppendGroupMethod(StringBuilder b, int argCount){
            string returnType = $"Products.P{argCount}<F, {MakeArgList(1, argCount)}>";
            string genericArgs = $"<F, M, {MakeArgList(1, argCount)}>";
            string args = "this Kind1<F, M> kind, "
                + string.Join(", ", MapRange(1, argCount, i => $"App<F, T{i}> t{i}"));
            string returnGeneric = $"<F, {MakeArgList(1, argCount)}>";
            string body = $"return new Products.P{argCount}{returnGeneric}({string.Join(", ", MapRange(1, argCount, i => $"t{i}"))});";
            
            b.Append($"{TAB}{TAB}public static {returnType} Group{genericArgs}({args}) where F : K1 where M : Mu{{\n");
            b.Append($"{TAB}{TAB}{TAB}{body}\n");
            b.Append($"{TAB}{TAB}}}\n\n");
        }
  
        public static void Main(string[] args){
            StringBuilder b = new StringBuilder();
            for(int argCount=1; argCount<=16; argCount++){
                AppendGroupMethod(b, argCount);
            }
            Console.WriteLine(b);
        }*/

        /*
         * Kind1 extension methods
         */
        public static Products.P1<F, T1> Group<F, M, T1>(this Kind1<F, M> kind, App<F, T1> t1) where F : K1 where M : Mu{
            return new Products.P1<F, T1>(t1);
        }

        public static Products.P2<F, T1, T2> Group<F, M, T1, T2>(this Kind1<F, M> kind, App<F, T1> t1, App<F, T2> t2) where F : K1 where M : Mu{
            return new Products.P2<F, T1, T2>(t1, t2);
        }

        public static Products.P3<F, T1, T2, T3> Group<F, M, T1, T2, T3>(this Kind1<F, M> kind, App<F, T1> t1, App<F, T2> t2, App<F, T3> t3) where F : K1 where M : Mu{
            return new Products.P3<F, T1, T2, T3>(t1, t2, t3);
        }

        public static Products.P4<F, T1, T2, T3, T4> Group<F, M, T1, T2, T3, T4>(this Kind1<F, M> kind, App<F, T1> t1, App<F, T2> t2, App<F, T3> t3, App<F, T4> t4) where F : K1 where M : Mu{
            return new Products.P4<F, T1, T2, T3, T4>(t1, t2, t3, t4);
        }

        public static Products.P5<F, T1, T2, T3, T4, T5> Group<F, M, T1, T2, T3, T4, T5>(this Kind1<F, M> kind, App<F, T1> t1, App<F, T2> t2, App<F, T3> t3, App<F, T4> t4, App<F, T5> t5) where F : K1 where M : Mu{
            return new Products.P5<F, T1, T2, T3, T4, T5>(t1, t2, t3, t4, t5);
        }

        public static Products.P6<F, T1, T2, T3, T4, T5, T6> Group<F, M, T1, T2, T3, T4, T5, T6>(this Kind1<F, M> kind, App<F, T1> t1, App<F, T2> t2, App<F, T3> t3, App<F, T4> t4, App<F, T5> t5, App<F, T6> t6) where F : K1 where M : Mu{
            return new Products.P6<F, T1, T2, T3, T4, T5, T6>(t1, t2, t3, t4, t5, t6);
        }

        public static Products.P7<F, T1, T2, T3, T4, T5, T6, T7> Group<F, M, T1, T2, T3, T4, T5, T6, T7>(this Kind1<F, M> kind, App<F, T1> t1, App<F, T2> t2, App<F, T3> t3, App<F, T4> t4, App<F, T5> t5, App<F, T6> t6, App<F, T7> t7) where F : K1 where M : Mu{
            return new Products.P7<F, T1, T2, T3, T4, T5, T6, T7>(t1, t2, t3, t4, t5, t6, t7);
        }

        public static Products.P8<F, T1, T2, T3, T4, T5, T6, T7, T8> Group<F, M, T1, T2, T3, T4, T5, T6, T7, T8>(this Kind1<F, M> kind, App<F, T1> t1, App<F, T2> t2, App<F, T3> t3, App<F, T4> t4, App<F, T5> t5, App<F, T6> t6, App<F, T7> t7, App<F, T8> t8) where F : K1 where M : Mu{
            return new Products.P8<F, T1, T2, T3, T4, T5, T6, T7, T8>(t1, t2, t3, t4, t5, t6, t7, t8);
        }

        public static Products.P9<F, T1, T2, T3, T4, T5, T6, T7, T8, T9> Group<F, M, T1, T2, T3, T4, T5, T6, T7, T8, T9>(this Kind1<F, M> kind, App<F, T1> t1, App<F, T2> t2, App<F, T3> t3, App<F, T4> t4, App<F, T5> t5, App<F, T6> t6, App<F, T7> t7, App<F, T8> t8, App<F, T9> t9) where F : K1 where M : Mu{
            return new Products.P9<F, T1, T2, T3, T4, T5, T6, T7, T8, T9>(t1, t2, t3, t4, t5, t6, t7, t8, t9);
        }

        public static Products.P10<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Group<F, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Kind1<F, M> kind, App<F, T1> t1, App<F, T2> t2, App<F, T3> t3, App<F, T4> t4, App<F, T5> t5, App<F, T6> t6, App<F, T7> t7, App<F, T8> t8, App<F, T9> t9, App<F, T10> t10) where F : K1 where M : Mu{
            return new Products.P10<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10);
        }

        public static Products.P11<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Group<F, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Kind1<F, M> kind, App<F, T1> t1, App<F, T2> t2, App<F, T3> t3, App<F, T4> t4, App<F, T5> t5, App<F, T6> t6, App<F, T7> t7, App<F, T8> t8, App<F, T9> t9, App<F, T10> t10, App<F, T11> t11) where F : K1 where M : Mu{
            return new Products.P11<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11);
        }

        public static Products.P12<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Group<F, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Kind1<F, M> kind, App<F, T1> t1, App<F, T2> t2, App<F, T3> t3, App<F, T4> t4, App<F, T5> t5, App<F, T6> t6, App<F, T7> t7, App<F, T8> t8, App<F, T9> t9, App<F, T10> t10, App<F, T11> t11, App<F, T12> t12) where F : K1 where M : Mu{
            return new Products.P12<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12);
        }

        public static Products.P13<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Group<F, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Kind1<F, M> kind, App<F, T1> t1, App<F, T2> t2, App<F, T3> t3, App<F, T4> t4, App<F, T5> t5, App<F, T6> t6, App<F, T7> t7, App<F, T8> t8, App<F, T9> t9, App<F, T10> t10, App<F, T11> t11, App<F, T12> t12, App<F, T13> t13) where F : K1 where M : Mu{
            return new Products.P13<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13);
        }

        public static Products.P14<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Group<F, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Kind1<F, M> kind, App<F, T1> t1, App<F, T2> t2, App<F, T3> t3, App<F, T4> t4, App<F, T5> t5, App<F, T6> t6, App<F, T7> t7, App<F, T8> t8, App<F, T9> t9, App<F, T10> t10, App<F, T11> t11, App<F, T12> t12, App<F, T13> t13, App<F, T14> t14) where F : K1 where M : Mu{
            return new Products.P14<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14);
        }

        public static Products.P15<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Group<F, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Kind1<F, M> kind, App<F, T1> t1, App<F, T2> t2, App<F, T3> t3, App<F, T4> t4, App<F, T5> t5, App<F, T6> t6, App<F, T7> t7, App<F, T8> t8, App<F, T9> t9, App<F, T10> t10, App<F, T11> t11, App<F, T12> t12, App<F, T13> t13, App<F, T14> t14, App<F, T15> t15) where F : K1 where M : Mu{
            return new Products.P15<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15);
        }

        public static Products.P16<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Group<F, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Kind1<F, M> kind, App<F, T1> t1, App<F, T2> t2, App<F, T3> t3, App<F, T4> t4, App<F, T5> t5, App<F, T6> t6, App<F, T7> t7, App<F, T8> t8, App<F, T9> t9, App<F, T10> t10, App<F, T11> t11, App<F, T12> t12, App<F, T13> t13, App<F, T14> t14, App<F, T15> t15, App<F, T16> t16) where F : K1 where M : Mu{
            return new Products.P16<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16);
        }
    }
}
